{"version":3,"sources":["webpack:///./src/styles/index.jsx","webpack:///./src/pages/index.jsx"],"names":["NavbarBase","styled","nav","withConfig","displayName","componentId","Navbar","props","show","Footer","Content","main","navLinks","Array","from","length","x","i","react_default","a","createElement","key","href","paragraphs","lorem","paragraph","__webpack_exports__","_useState","useState","hideOnScroll","setHideOnScroll","rendersCount","useRef","useScrollPosition","_ref","prevPos","isShow","currPos","y","useMemo","react","current"],"mappings":"8JAEMA,EAAaC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAGJ,CAAH,iQAyBHK,EAASL,YAAOD,GAAVG,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,4GAKH,SAAAM,GAAK,OAAKA,EAAMC,KAAO,UAAY,UAGpC,SAAAD,GAAK,OAAKA,EAAMC,KAAO,OAAS,wBAElCC,EAASR,YAAOD,GAAVG,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGJ,CAAH,eAINS,EAAUT,IAAOU,KAAVR,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,sBCnCdW,EAAWC,MAAMC,KAAK,CAAEC,OAAQ,GAAK,SAACC,EAAGC,GAAJ,OACzCC,EAAAC,EAAAC,cAAA,KAAGC,IAAKJ,EAAGK,KAAK,KAAhB,QACQL,KAIJM,EAAaV,MAAMC,KAAK,CAAEC,OAAQ,IAAM,SAACC,EAAGC,GAAJ,OAC5CC,EAAAC,EAAAC,cAAA,KAAGC,IAAKJ,GAAIO,QAAMC,UAAU,OAGfC,EAAA,mBAAM,IAAAC,EACqBC,oBAAS,GAA1CC,EADYF,EAAA,GACEG,EADFH,EAAA,GAEbI,EAAeC,iBAAO,GAU5B,OARAC,4BACE,SAAAC,GAA0B,IAAvBC,EAAuBD,EAAvBC,QACKC,EADkBF,EAAdG,QACaC,EAAIH,EAAQG,EAC/BF,IAAWP,GAAcC,EAAgBM,IAE/C,CAACP,IAGIU,kBACL,kBACErB,EAAAC,EAAAC,cAACoB,EAAA,SAAD,KACEtB,EAAAC,EAAAC,cAACd,EAAD,CAAQE,KAAMqB,GAAejB,GAC7BM,EAAAC,EAAAC,cAACV,EAAD,KAAUa,GACVL,EAAAC,EAAAC,cAACX,EAAD,KACES,EAAAC,EAAAC,cAAA,4BAAoBW,EAAaU,YAIvC,CAACZ","file":"component---src-pages-index-jsx-fc6db30d1b5858305da7.js","sourcesContent":["import styled from 'styled-components'\n\nconst NavbarBase = styled.nav`\n  color: white;\n  background: #e6513d;\n\n  a {\n    color: white;\n    text-decoration: none;\n  }\n  line-height: 1;\n\n  height: 40px;\n  position: fixed;\n  right: 0;\n  left: 0;\n  z-index: 1030;\n\n  padding-left: 10px;\n  padding-right: 10px;\n  display: flex;\n\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: space-evenly;\n`\n\nexport const Navbar = styled(NavbarBase)`\n  top: 0;\n\n  box-shadow: 0 0.5rem 2rem rgba(0, 0, 0, 0.65);\n\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\n  //transition: all 200ms ${props => (props.show ? 'ease-in' : 'ease-out')};\n  transition: all 200ms ease;\n  transform: ${props => (props.show ? 'none' : 'translate(0, -100%)')};\n`\nexport const Footer = styled(NavbarBase)`\n  bottom: 0;\n`\n\nexport const Content = styled.main`\n  margin-top: 45px;\n`\n","import React, { useState, useRef, useMemo, Fragment } from 'react'\nimport { useScrollPosition } from '@n8tb1t/use-scroll-position'\nimport { lorem } from 'faker'\n\nimport { Navbar, Content, Footer } from '../styles'\n\nconst navLinks = Array.from({ length: 5 }, (x, i) => (\n  <a key={i} href=\"/\">\n    Link {i}\n  </a>\n))\n\nconst paragraphs = Array.from({ length: 20 }, (x, i) => (\n  <p key={i}>{lorem.paragraph(30)}</p>\n))\n\nexport default () => {\n  const [hideOnScroll, setHideOnScroll] = useState(true)\n  const rendersCount = useRef(0)\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      const isShow = currPos.y > prevPos.y\n      if (isShow !== hideOnScroll) setHideOnScroll(isShow)\n    },\n    [hideOnScroll]\n  )\n\n  return useMemo(\n    () => (\n      <Fragment>\n        <Navbar show={hideOnScroll}>{navLinks}</Navbar>\n        <Content>{paragraphs}</Content>\n        <Footer>\n          <b>RENDER COUNT: {++rendersCount.current}</b>\n        </Footer>\n      </Fragment>\n    ),\n    [hideOnScroll]\n  )\n}\n"],"sourceRoot":""}